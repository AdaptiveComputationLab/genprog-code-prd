class gcd extends java.lang.Object
{

    void <init>()
    {
        gcd r0;

        r0 := @this: gcd;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int i0, i1;
        java.lang.String $r1, $r2;
        java.io.PrintStream $r3, $r4;

        r0 := @parameter0: java.lang.String[];
        $r1 = r0[0];
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);
        $r2 = r0[1];
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        if i0 != 0 goto label0;

        $r3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r3.<java.io.PrintStream: void println(int)>(i1);

     label0:
        if i1 == 0 goto label2;

        if i0 <= i1 goto label1;

        i0 = i0 - i1;
        goto label0;

     label1:
        i1 = i1 - i0;
        goto label0;

     label2:
        $r4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r4.<java.io.PrintStream: void println(int)>(i0);
        return;
    }

    static void <clinit>()
    {
        java.lang.Thread $r0;
        weimer_runnable $r1;

        $r0 = new java.lang.Thread;
        $r1 = new weimer_runnable;
        specialinvoke $r1.<weimer_runnable: void <init>()>();
        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);
        virtualinvoke $r0.<java.lang.Thread: void start()>();
        return;
    }
}
